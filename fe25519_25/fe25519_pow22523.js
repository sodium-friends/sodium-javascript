
module.exports = loadWebAssembly

loadWebAssembly.supported = typeof WebAssembly !== 'undefined'

function loadWebAssembly (opts) {
  if (!loadWebAssembly.supported) return null

  var imp = opts && opts.imports
  var wasm = toUint8Array('AGFzbQEAAAABHQJgFH5+fn5+fn5+fn5+fn5+fn5+fn5+AGACf38AAwMCAAEFAwEAAQYzCn4BQgALfgFCAAt+AUIAC34BQgALfgFCAAt+AUIAC34BQgALfgFCAAt+AUIAC34BQgALBx0CBm1lbW9yeQIAEGZlMjU1MTlfcG93MjI1MjMAAQrvHAKzDwF8fiAAp6whACABp6whASACp6whAiADp6whAyAEp6whBCAFp6whBSAGp6whBiAHp6whByAIp6whCCAJp6whCSAKp6whCiALp6whCyAMp6whDCANp6whDSAOp6whDiAPp6whDyAQp6whECARp6whESASp6whEiATp6whE0ITIAt+IAtCgICAgAiDQgGGQhN+fSEeQhMgDH4gDEKAgICACINCAYZCE359IR9CEyANfiANQoCAgIAIg0IBhkITfn0hIEITIA5+IA5CgICAgAiDQgGGQhN+fSEhQhMgD34gD0KAgICACINCAYZCE359ISJCEyAQfiAQQoCAgIAIg0IBhkITfn0hI0ITIBF+IBFCgICAgAiDQgGGQhN+fSEkQhMgEn4gEkKAgICACINCAYZCE359ISVCEyATfiATQoCAgIAIg0IBhkITfn0hJkICIAF+IAFCgICAgAiDQgGGQgJ+fSEnQgIgA34gA0KAgICACINCAYZCAn59IShCAiAFfiAFQoCAgIAIg0IBhkICfn0hKUICIAd+IAdCgICAgAiDQgGGQgJ+fSEqQgIgCX4gCUKAgICACINCAYZCAn59ISsgHqesIR4gH6esIR8gIKesISAgIaesISEgIqesISIgI6esISMgJKesISQgJaesISUgJqesISYgJ6esIScgKKesISggKaesISkgKqesISogK6esISsgACAKfiEsIAAgC34hLSAAIAx+IS4gACANfiEvIAAgDn4hMCAAIA9+ITEgACAQfiEyIAAgEX4hMyAAIBJ+ITQgACATfiE1IAEgCn4hNiAnIAt+ITcgASAMfiE4ICcgDX4hOSABIA5+ITogJyAPfiE7IAEgEH4hPCAnIBF+IT0gASASfiE+ICcgJn4hPyACIAp+IUAgAiALfiFBIAIgDH4hQiACIA1+IUMgAiAOfiFEIAIgD34hRSACIBB+IUYgAiARfiFHIAIgJX4hSCACICZ+IUkgAyAKfiFKICggC34hSyADIAx+IUwg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CSMAIwEjAiMDIwQjBSMGIwcjCCMJEAAMAAsLQQAhDCMAIQ4jASEQIwIhEiMDIRQjBCEWIwUhGCMGIRojByEcIwghHiMJISAgDSAPIBEgEyAVIBcgGSAbIB0gHyMAIwEjAiMDIwQjBSMGIwcjCCMJEAAjACENIwEhDyMCIREjAyETIwQhFSMFIRcjBiEZIwchGyMIIR0jCSEfAkADQEEKIAxGDQEgDEEBaiEMIwAjASMCIwMjBCMFIwYjByMIIwkjACMBIwIjAyMEIwUjBiMHIwgjCRAADAALC0EAIQwgDSAPIBEgEyAVIBcgGSAbIB0gHyMAIwEjAiMDIwQjBSMGIwcjCCMJEAAjACEOIwEhECMCIRIjAyEUIwQhFiMFIRgjBiEaIwchHCMIIR4jCSEgAkADQEEUIAxGDQEgDEEBaiEMIwAjASMCIwMjBCMFIwYjByMIIwkjACMBIwIjAyMEIwUjBiMHIwgjCRAADAALC0EAIQwgDiAQIBIgFCAWIBggGiAcIB4gICMAIwEjAiMDIwQjBSMGIwcjCCMJEAACQANAQQogDEYNASAMQQFqIQwjACMBIwIjAyMEIwUjBiMHIwgjCSMAIwEjAiMDIwQjBSMGIwcjCCMJEAAMAAsLQQAhDCANIA8gESATIBUgFyAZIBsgHSAfIwAjASMCIwMjBCMFIwYjByMIIwkQACMAIQ0jASEPIwIhESMDIRMjBCEVIwUhFyMGIRkjByEbIwghHSMJIR8CQANAQTIgDEYNASAMQQFqIQwjACMBIwIjAyMEIwUjBiMHIwgjCSMAIwEjAiMDIwQjBSMGIwcjCCMJEAAMAAsLQQAhDCANIA8gESATIBUgFyAZIBsgHSAfIwAjASMCIwMjBCMFIwYjByMIIwkQACMAIQ4jASEQIwIhEiMDIRQjBCEWIwUhGCMGIRojByEcIwghHiMJISACQANAQeQAIAxGDQEgDEEBaiEMIwAjASMCIwMjBCMFIwYjByMIIwkjACMBIwIjAyMEIwUjBiMHIwgjCRAADAALC0EAIQwgDiAQIBIgFCAWIBggGiAcIB4gICMAIwEjAiMDIwQjBSMGIwcjCCMJEAACQANAQTIgDEYNASAMQQFqIQwjACMBIwIjAyMEIwUjBiMHIwgjCSMAIwEjAiMDIwQjBSMGIwcjCCMJEAAMAAsLQQAhDCANIA8gESATIBUgFyAZIBsgHSAfIwAjASMCIwMjBCMFIwYjByMIIwkQACMAIwEjAiMDIwQjBSMGIwcjCCMJIwAjASMCIwMjBCMFIwYjByMIIwkQACMAIwEjAiMDIwQjBSMGIwcjCCMJIwAjASMCIwMjBCMFIwYjByMIIwkQACACIAMgBCAFIAYgByAIIAkgCiALIwAjASMCIwMjBCMFIwYjByMIIwkQACAAIwA+AgAgACMBPgIEIAAjAj4CCCAAIwM+AgwgACMEPgIQIAAjBT4CFCAAIwY+AhggACMHPgIcIAAjCD4CICAAIwk+AiQL')
  var ready = null

  var mod = {
    buffer: wasm,
    memory: null,
    exports: null,
    realloc: realloc,
    onload: onload
  }

  onload(function () {})

  return mod

  function realloc (size) {
    mod.exports.memory.grow(Math.max(0, Math.ceil(Math.abs(size - mod.memory.length) / 65536)))
    mod.memory = new Uint8Array(mod.exports.memory.buffer)
  }

  function onload (cb) {
    if (mod.exports) return cb()

    if (ready) {
      ready.then(cb.bind(null, null)).catch(cb)
      return
    }

    try {
      if (opts && opts.async) throw new Error('async')
      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})
    } catch (err) {
      ready = WebAssembly.instantiate(wasm, imp).then(setup)
    }

    onload(cb)
  }

  function setup (w) {
    mod.exports = w.instance.exports
    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)
  }
}

function toUint8Array (s) {
  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))
  return (require('buf' + 'fer').Buffer).from(s, 'base64')
}

function charCodeAt (c) {
  return c.charCodeAt(0)
}
